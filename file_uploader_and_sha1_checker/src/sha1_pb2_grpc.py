# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import sha1_pb2 as sha1__pb2


class Sha1CheckerStub(object):
    """service will output the square root
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.upload = channel.stream_unary(
                '/Sha1Checker/upload',
                request_serializer=sha1__pb2.Chunk.SerializeToString,
                response_deserializer=sha1__pb2.Reply.FromString,
                )
        self.CheckSha1 = channel.unary_unary(
                '/Sha1Checker/CheckSha1',
                request_serializer=sha1__pb2.FileData.SerializeToString,
                response_deserializer=sha1__pb2.Result.FromString,
                )


class Sha1CheckerServicer(object):
    """service will output the square root
    """

    def upload(self, request_iterator, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckSha1(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Sha1CheckerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'upload': grpc.stream_unary_rpc_method_handler(
                    servicer.upload,
                    request_deserializer=sha1__pb2.Chunk.FromString,
                    response_serializer=sha1__pb2.Reply.SerializeToString,
            ),
            'CheckSha1': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckSha1,
                    request_deserializer=sha1__pb2.FileData.FromString,
                    response_serializer=sha1__pb2.Result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Sha1Checker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Sha1Checker(object):
    """service will output the square root
    """

    @staticmethod
    def upload(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/Sha1Checker/upload',
            sha1__pb2.Chunk.SerializeToString,
            sha1__pb2.Reply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckSha1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Sha1Checker/CheckSha1',
            sha1__pb2.FileData.SerializeToString,
            sha1__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
